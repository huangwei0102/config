{
  //************ language setting **************
  "[python]": {
    "editor.formatOnType": true,
    "editor.defaultFormatter": "ms-python.python",
  },
  "cmake.configureOnOpen": true,
  //************ language setting **************
  //************ UI setting **************
  // 字体类别,同时配置多行仅最后一行生效
  // 也可在一行配置的VALUE值里以英文逗号分隔配置多个,先找到先生效(即字体都存在时第一个生效)
  // 默认(不配置/配置错误或未生效时使用),该字体身材娇小,0和O区分明显,1和l区分不明显
  // "editor.fontFamily": "Consolas",
  // 推荐皮怪使用,该字体身材风骚,样式蛇皮,[[0和O,1和l区分都很明显]]
  // "editor.fontFamily": "Luculent",
  // 推荐直男直女使用,该字体身材苗条,样式规整,0和O区分明显,1和l区分不明显,低分辨率下效果不好
  // "editor.fontFamily": "Inconsolata",
  // 推荐娇妹/小公举使用,该字体身材十分娇小,[[0和O,1和l区分都很明显]],@Ubuntu-Linux出品
  // "editor.fontFamily": "Ubuntu Mono",
  // 推荐猛男使用,该字体身材壮硕,[[0和O,1和l区分都很明显]] 对标点符号有优化
  // "editor.fontFamily": "PT Mono",
  // 比较推荐,该字体身材丰满,[[0和O,1和l区分都很明显]],标点符号也有优化,@Apple出品 可能有信仰加成
  // "editor.fontFamily": "Monaco",
  // 十分推荐,该字体身材时尚,[[0和O,1和l区分都很明显]],===支持连字符===,@Microsoft出品 可能也有信仰加成
  // "editor.fontFamily": "Cascadia Code",
  // 相当推荐,该字体身材标准,[[0和O,1和l区分都很明显]],===支持连字符===
  // "editor.fontFamily": "Fira Code",
  // 强烈推荐!!! 该字体身材匀称、完美,[[0和O,1和l区分都很明]],===支持连字符===,@JetBrains出品,信仰点满
  "editor.fontFamily": "JetBrains Mono",
  // 启用连字符(还需字体本身支持连字符,如Cascadia Code/Fira Code/JetBrains Mono)
  "editor.fontLigatures": true,
  "editor.fontSize": 16, // 字体大小
  "editor.fontWeight": 400,
  "editor.inlineSuggest.enabled": true,
  "editor.mouseWheelZoom": true,
  "editor.lineHeight": 1.5,
  "editor.lineNumbers": "relative",
  "editor.renderWhitespace": "all",
  "editor.accessibilitySupport": "on",
  "terminal.integrated.fontFamily": "monospace",
  "breadcrumbs.symbolSortOrder": "type",
  "window.zoomLevel": 1,
  //************ UI setting **************
  //************ vim setting **************
  // vim setting
  "vim.normalModeKeyBindings": [
    // 添加/删除书签
    {
      "before": [
        "<leader>",
        "m"
      ],
      "commands": [
        "bookmarks.toggle"
      ]
    },
    // 打开书签列表
    {
      "before": [
        "<leader>",
        "b"
      ],
      "commands": [
        "bookmarks.list"
      ]
    },
    // 关闭高亮
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        ":nohl",
      ]
    },
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "H"
      ],
      "after": [
        "^"
      ]
    },
    {
      "before": [
        "L"
      ],
      "after": [
        "$"
      ]
    },
    {
      "before": [
        " ",
        " ",
      ],
      "after": [
        "leader",
        "leader",
        "leader",
        "b",
        "d",
        "w"
      ]
    },
    {
      "before": [
        "g",
        "[",
      ],
      "commands": [
        "editor.action.marker.prevInFiles"
      ]
    },
    {
      "before": [
        "g",
        "]",
      ],
      "commands": [
        "editor.action.marker.nextInFiles"
      ]
    },
  ],
  // 插入模式下的非递归按键绑定
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<Esc>"
      ]
    },
  ],
  "vim.visualModeKeyBindings": [
    // 可视模式下调整缩进
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // 可视模式下避免p粘贴重写寄存器
    {
      "before": [
        "p",
      ],
      "after": [
        "p",
        "g",
        "v",
        "y"
      ]
    }
  ],
  // 绑定vim前导键
  "vim.leader": "<space>",
  // 启用系统粘贴板作为vim寄存器
  "vim.useSystemClipboard": true,
  // 由vim接管ctrl+any的按键，而不是vscode
  "vim.useCtrlKeys": true,
  // 突出显示与当前搜索匹配的所有文本
  "vim.hlsearch": true,
  "vim.handleKeys": {
    "<C-a>": false, // 数字加一->回到行首
    "<C-x>": false, // 数字减一->删除整行
    "<C-c>": false, // 退出插入模式->复制
    "<C-f>": false, // 向下滚动一屏->下一个字符
    // "<C-n>": false, // 下移一行，同j->取消高亮
    "<C-t>": false, // 在行首插入tab->跨文件符号跳转
    // "<C-r>": false // 撤销上一次U命令->打开最近文件
  },
  // 行间移动,不打开折叠代码块
  "vim.foldfix": true,
  "vim.showMarksInGutter": true,
  // 启用插件
  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.camelCaseMotion.enable": true,
  // 自动切换输入法
  "vim.autoSwitchInputMethod.enable": true,
  "vim.autoSwitchInputMethod.defaultIM": "1",
  "vim.autoSwitchInputMethod.obtainIMCmd": "/usr/bin/fcitx-remote",
  "vim.autoSwitchInputMethod.switchIMCmd": "/usr/bin/fcitx-remote -t {im}",
  //************ vim setting **************

  //************ proxy setting **************
  "http.proxy": "http://172.23.145.xxx:xxx",
  "http.proxyStrictSSL": false,
  "http.proxySupport": "on",
  //************ proxy setting **************
  
  //************ koroFileHeader setting **************
  //ctrl+win+i
  // 头部注释
  "fileheader.customMade": {
    // Author字段是文件的创建者 可以在specialOptions中更改特殊属性
    // 公司项目和个人项目可以配置不同的用户名与邮箱 搜索: gitconfig includeIf  比如: https://ayase.moe/2021/03/09/customized-git-config/
    // 自动提取当前git config中的: 用户名、邮箱
    "Author": "git config user.name && git config user.email", // 同时获取用户名与邮箱
    // "Author": "git config user.name", // 仅获取用户名
    // "Author": "git config user.email", // 仅获取邮箱
    // "Author": "OBKoro1", // 写死的固定值 不从git config中获取
    "Date": "Do not edit", // 文件创建时间(不变)
    // LastEditors、LastEditTime、FilePath将会自动更新 如果觉得时间更新的太频繁可以使用throttleTime(默认为1分钟)配置更改更新时间。
    "LastEditors": "git config user.name && git config user.email", // 文件最后编辑者 与Author字段一致
    // 由于编辑文件就会变更最后编辑时间，多人协作中合并的时候会导致merge
    // 可以将时间颗粒度改为周、或者月，这样冲突就减少很多。搜索变更时间格式: dateFormat
    "LastEditTime": "Do not edit", // 文件最后编辑时间
    // 输出相对路径，类似: /文件夹名称/src/index.js
    "FilePath": "Do not edit", // 文件在项目中的相对路径 自动更新
    // 插件会自动将光标移动到Description选项中 方便输入 Description字段可以在specialOptions更改
    // "Description": "", // 介绍文件的作用、文件的入参、出参。
    // custom_string_obkoro1~custom_string_obkoro100都可以输出自定义信息
    // 可以设置多条自定义信息 设置个性签名、留下QQ、微信联系方式、输入空行等
    // "custom_string_obkoro1": "",
    // 版权声明 保留文件所有权利 自动替换年份 获取git配置的用户名和邮箱
    // 版权声明获取git配置, 与Author字段一致: ${git_name} ${git_email} ${git_name_email}
    // "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by ${git_name_email}, All Rights Reserved. "
    // "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by 写死的公司名/用户名, All Rights Reserved. "
  },
  // 函数注释
  "fileheader.cursorMode": {
    "description": "", // 函数注释生成之后，光标移动到这里
    "param": "", // param 开启函数参数自动提取 需要将光标放在函数行或者函数上方的空白行
    "return": "",
  },
  "fileheader.configObj": {
    "createFileTime": true,
    "language": {
      "languagetest": {
        "head": "/$$",
        "middle": " $ @",
        "end": " $/",
        "functionSymbol": {
          "head": "/** ",
          "middle": " * @",
          "end": " */"
        },
        "functionParams": "js"
      }
    },
    "autoAdd": false,
    "autoAddLine": 100,
    "autoAlready": true,
    "annotationStr": {
      "head": "/*",
      "middle": " * @",
      "end": " */",
      "use": false
    },
    "headInsertLine": {
      "php": 2,
      "sh": 2
    },
    "beforeAnnotation": {
      "文件后缀": "该文件后缀的头部注释之前添加某些内容"
    },
    "afterAnnotation": {
      "文件后缀": "该文件后缀的头部注释之后添加某些内容"
    },
    "specialOptions": {
      "特殊字段": "自定义比如LastEditTime/LastEditors"
    },
    "switch": {
      "newlineAddAnnotation": true
    },
    "supportAutoLanguage": [],
    "prohibitAutoAdd": [
      "json"
    ],
    "folderBlacklist": [
      "node_modules",
      "文件夹禁止自动添加头部注释"
    ],
    "prohibitItemAutoAdd": [
      "项目的全称, 整个项目禁止自动添加头部注释, 可以使用快捷键添加"
    ],
    "moveCursor": true,
    "dateFormat": "YYYY-MM-DD HH:mm:ss",
    "atSymbol": [
      "@",
      "@"
    ],
    "atSymbolObj": {
      "文件后缀": [
        "头部注释@符号",
        "函数注释@符号"
      ]
    },
    "colon": [
      ": ",
      ": "
    ],
    "colonObj": {
      "文件后缀": [
        "头部注释冒号",
        "函数注释冒号"
      ]
    },
    "filePathColon": "路径分隔符替换",
    "showErrorMessage": false,
    "writeLog": false,
    "wideSame": false,
    "wideNum": 13,
    "functionWideNum": 0,
    "CheckFileChange": false,
    "createHeader": false,
    "useWorker": false,
    "designAddHead": false,
    "headDesignName": "random",
    "headDesign": false,
    "cursorModeInternalAll": {},
    "openFunctionParamsCheck": true,
    "functionParamsShape": [
      "{",
      "}"
    ],
    "functionBlankSpaceAll": {},
    "functionTypeSymbol": "*",
    "typeParamOrder": "type param",
    "customHasHeadEnd": {},
    "throttleTime": 60000,
    "functionParamAddStr": "",
    "NoMatchParams": "no show param"
  },
  //************ koroFileHeader setting **************

  //************ blockman setting **************
  // blockman 配置
  // "editor.inlayHints.enabled": "off",
  // "editor.guides.indentation": false,
  // "editor.guides.bracketPairs": false,
  // "editor.wordWrap": "off",
  // "diffEditor.wordWrap": "off",
  // "workbench.colorCustomizations": {
  //   "editor.lineHighlightBackground": "#1073cf2d",
  //   "editor.lineHighlightBorder": "#9fced11f"
  // },
  // "blockman.n04ColorComboPreset": "Classic Dark 1 (Super gradients)",
  // "blockman.n04Sub05MinDistanceBetweenRightSideEdges": 5,
  // "blockman.n23AnalyzeSquareBrackets": true,
  // "blockman.n24AnalyzeRoundBrackets": true,
  // "blockman.n27AlsoRenderBlocksInsideSingleLineAreas": true,
  // "blockman.n33A03B1FromDepth0ToInwardForFocusTreeBorders": "30,1,0,2; neutral > linear-gradient(to right, rgb(144, 54, 8), rgb(48, 36, 116))",
  //************ blockman setting **************
  //************ path intellisense setting **************
  "path-intellisense.autoTriggerNextSuggestion": true,
  "path-intellisense.absolutePathToWorkspace": false,
  "path-intellisense.autoSlashAfterDirectory": true,
  "path-intellisense.mappings": {
    ".": "${workspaceFolder}",
  },
  //************ path intellisense setting **************
  
  //************ 驼峰翻译助手 setting **************
  //shift+alt+t
  "varTranslation.translationEngine": "baidu",
  "varTranslation.baiduSecret": "*****",
  //************ 驼峰翻译助手 setting **************
  //************ Code Spell Checker setting **************
  "cSpell.userWords": [
    "bboxes",
    "Cascadia",
    "Consolas",
    "easymotion",
    "Eigen",
    "fileheader",
    "Fira",
    "foldfix",
    "hlsearch",
    "hstack",
    "imshow",
    "Inconsolata",
    "inds",
    "keypoints",
    "koro",
    "metas",
    "mmcv",
    "navparking",
    "qianlei",
    "tianws"
  ],
  //************ Code Spell Checker setting **************
  "files.watcherExclude": {
    "**/work_dirs/**/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true,
    "**/.hg/store/**": true
  },
  "python.formatting.provider": "black",
  "gitlens.currentLine.scrollable": false,
}
